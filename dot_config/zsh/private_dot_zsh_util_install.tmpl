# Handle Git
if ! command -v git &> /dev/null; then
  ${=DOTFILES_ENV[PKG_MANAGER]} git
fi

{{- if eq (dig "osRelease" "id" "" .chezmoi) "debian" }}
if ! command -v mise &> /dev/null; then
  curl https://mise.run | sh
fi
{{- end}}

typeset -A utils
utils=(
  atuin atuin
  {{- if eq (dig "osRelease" "id" "" .chezmoi) "debian" }}
  batcat bat
  {{- else }}
  bat bat
  {{- end }}
  direnv direnv
  eza eza
  fzf fzf
  ifne moreutils
  jq jq
  {{- if (and (ne .chezmoi.os "android") (ne (dig "osRelease" "id" "" .chezmoi) "debian")) }}
  mise mise
  {{- end }}
  rg ripgrep
  shellcheck shellcheck
  tmux tmux
  vim vim
  watch watch
)
to_install=()

for binary pkg in ${(@kv)utils}; do
  if ! command -v $binary &> /dev/null; then
    to_install+=$pkg
  fi
done

if [[ "${DOTFILES_ENV[OS]}" == 'Darwin' ]]; then
  if [[ ! -f "$HOME/Library/Fonts/HackNerdFont-Regular.ttf" ]]; then
    to_install+=font-hack-nerd-font
  fi
  if ! command -v gsed &> /dev/null; then
    to_install+=gnu-sed
  fi
fi

if [[ "${#to_install[@]}" -eq 0 ]]; then
  return
fi

echo "The following utilities are not yet installed: $to_install"
read -t 2 -qs "response?Install them? "
echo
case "$response" in
  y)
    echo "Installing."
    ${=DOTFILES_ENV[PKG_MANAGER]} $to_install
    ;;
  *)
    echo "Skipping install."
    ;;
esac

unset utils
unset to_install
